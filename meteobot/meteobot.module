<?php
/**
 * @file
 * A block module that displays weather data form Meteobot API.
 */
module_load_include('inc', 'meteobot', 'includes/config.php');

/**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */
function meteobot_help($path, $arg) {
  switch ($path) {
    case "admin/help#meteobot":
      $output = '';
      $output .= '<h2>' . t('About') . '</h2>';
      $output .= '<p>' . t('Displays weather data from Meteobot API');
      return $output;
    break;
  }
}

/**
 * Implements hook_menu()
 *
 * Registered API path
 */

function meteobot_menu() {
  $items = array();

  // The path that the endpoint will be registered to
  $items['api/meteo'] = array(

    // The name of the function called when the path is accessed
    'page callback' => 'meteobot_json_callback',

    // Set this value to TRUE to allow access to any user
    'access callback' => TRUE,

    // Declare this as a simple registered path
    'type' => MENU_CALLBACK,
  );

  // The path for testing meteobot.com API
  $items['api/export.meteobot.com'] = array(

    // The name of the function called when the path is accessed
    'page callback' => 'meteobot_com_api',

    // Set this value to TRUE to allow access to any user
    'access callback' => TRUE,

    // Declare this as a simple registered path
    'type' => MENU_CALLBACK,
  );

  // Return the $items array to register the path
  return $items;
}

/**
 * Function that return JSON data from "meteobot" table
 */

function meteobot_json_callback($period = '') {

  // Create a SelectQuery object using the 'meteobot' db table
  $query = db_select('meteobot');

  // Add the fields to query
  $query->addField('meteobot', 'wid');
  $query->addField('meteobot', 'sid');
  $query->addField('meteobot', 'created');
  $query->addField('meteobot', 'air_temperature');
  $query->addField('meteobot', 'air_pressure');
  $query->addField('meteobot', 'air_humidity');
  $query->addField('meteobot', 'dew_point');
  $query->addField('meteobot', 'earth_humidity_1');
  $query->addField('meteobot', 'earth_humidity_2');
  $query->addField('meteobot', 'earth_humidity_3');
  $query->addField('meteobot', 'earth_temperature_1');
  $query->addField('meteobot', 'earth_temperature_2');
  $query->addField('meteobot', 'earth_temperature_3');
  $query->addField('meteobot', 'leaf_wetness_1');
  $query->addField('meteobot', 'leaf_wetness_2');
  $query->addField('meteobot', 'precipitation');
  $query->addField('meteobot', 'wind_direction');
  $query->addField('meteobot', 'wind_speed');
  $query->addField('meteobot', 'solar_radiation');

  // define $start_time for requested time period
  switch ($period) {
    case 'hourly':
      $start_time = '-1 hour';
    break;
    case 'daily':
      $start_time = '-1 day';
    break;
    case 'weekly':
      $start_time = '-7 day';
    break;
    case 'monthly':
      $start_time = '-30 day';
    break;
    default:
    $start_time = 0;
  break;
}
$end_time = time();

// Only return records that were created between $start_time and $end_time
$query->condition('meteobot.created', array(strtotime($start_time), $end_time), 'BETWEEN');

// Run the query and get the results as an array of objects
$data = $query->execute()->fetchAll();

return drupal_json_output($data);
}

/**
 * Function that return JSON data from export.meteobot.com API
 */

function meteobot_com_api(){

  // api authentification array
  $api_auth = get_api_auth();

  // api authentification variables
  $id = $api_auth['sid'];
  $username = $api_auth['username'];
  $password = $api_auth['password'];
  $api_url = $api_auth['api_url'];

  // time period
  $e_time = date('Y-m-d H:i', time());
  $s_time = date('Y-m-d H:i', strtotime('-10 min'));

  $data = array(
    'id' => $id,
    'startTime' => $s_time,
    'endTime' => $e_time,
  );

  $options = array(
    'method' => 'GET',
    'data' => $data,
    'headers' => array('Content-Type' => 'application/json'),
  );

  $url = 'https://'.$username.':'.$password.'@'.variable_get('api_url', $api_url);

  $full_url = url($url, array('query' => $data));

  $response = drupal_http_request($full_url, $options);

  /* TODO: ------------------------------------------------------------
  $response->data to JSON
  add to database
  cronjob every 10min
  */
  echo gettype($response->data);
  var_dump($response->data);
}
