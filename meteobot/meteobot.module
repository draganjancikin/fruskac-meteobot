<?php
/**
 * @file
 * A block module that displays weather data form Meteobot API.
 */

 /**
 * Implements hook_help().
 *
 * Displays help and module information.
 *
 * @param path
 *   Which path of the site we're using to display help
 * @param arg
 *   Array that holds the current path as returned from arg() function
 */
function meteobot_help($path, $arg) {
  switch ($path) {
    case "admin/help#meteobot":
      $output = '';
      $output .= '<h2>' . t('About') . '</h2>';
      $output .= '<p>' . t('Displays weather data from Meteobot API');
      return $output;
      break;
  }
}

/**
 * Implements hook_menu()
 *
 * Registered API path
 */

function meteobot_menu() {
  $items = array();

  // The path that the endpoint will be registered to
  $items['meteo/ajax/meteobot.json'] = array(

    // The name of the function called when the path is accessed
    'page callback' => 'meteobot_json_callback',

    // Set this value to TRUE to allow access to any user
    'access callback' => TRUE,

    // Declare this as a simple registered path
    'type' => MENU_CALLBACK,
  );

  // Return the $items array to register the path
  return $items;
}

/**
 * Function that return JSON data from "meteobot" table
 */

function meteobot_json_callback() {

  // Create a SelectQuery object using the 'meteobot' db table
  $query = db_select('meteobot');

  // Add the fields to query
  $query->addField('meteobot', 'wid');
  $query->addField('meteobot', 'sid');
  $query->addField('meteobot', 'created');
  $query->addField('meteobot', 'air_temperature');
  $query->addField('meteobot', 'air_pressure');
  $query->addField('meteobot', 'air_humidity');
  $query->addField('meteobot', 'dew_point');
  $query->addField('meteobot', 'earth_humidity_1');
  $query->addField('meteobot', 'earth_humidity_2');
  $query->addField('meteobot', 'earth_humidity_3');
  $query->addField('meteobot', 'earth_temperature_1');
  $query->addField('meteobot', 'earth_temperature_2');
  $query->addField('meteobot', 'earth_temperature_3');
  $query->addField('meteobot', 'leaf_wetness_1');
  $query->addField('meteobot', 'leaf_wetness_2');
  $query->addField('meteobot', 'precipitation');
  $query->addField('meteobot', 'wind_direction');
  $query->addField('meteobot', 'wind_speed');
  $query->addField('meteobot', 'solar_radiation');

  // Only return records that were created in the last hour
  $query->condition('meteobot.created', strtotime('-1 hour'), '>=');

  // Run the query and get the results as an array of objects
  $data = $query->execute()->fetchAll();

  return drupal_json_output($data);
}
